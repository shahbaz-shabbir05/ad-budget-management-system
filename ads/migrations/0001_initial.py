# Generated by Django 5.2.4 on 2025-07-08 16:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "daily_budget",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "monthly_budget",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DaypartingSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "days_of_week",
                    models.CharField(
                        help_text="Comma-separated days, e.g. 'mon,tue,wed'",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "daily_spend",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "monthly_spend",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_daily_reset",
                    models.DateField(blank=True, db_index=True, null=True),
                ),
                (
                    "last_monthly_reset",
                    models.DateField(blank=True, db_index=True, null=True),
                ),
                (
                    "budget_check_frequency_minutes",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How often (in minutes) to check/enforce this campaign's budget. If not set, uses DEFAULT_BUDGET_CHECK_FREQUENCY.",
                        null=True,
                    ),
                ),
                (
                    "last_budget_check",
                    models.DateTimeField(
                        blank=True,
                        help_text="The last time this campaign's budget was checked. Used for per-campaign frequency logic.",
                        null=True,
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaigns",
                        to="ads.brand",
                    ),
                ),
                (
                    "dayparting_schedule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ads.daypartingschedule",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BudgetAdjustment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("reason", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("adjusted_by", models.CharField(max_length=100)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budget_adjustments",
                        to="ads.brand",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budget_adjustments",
                        to="ads.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_status", models.BooleanField()),
                ("new_status", models.BooleanField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("reason", models.CharField(max_length=255)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="ads.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpendRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Spend amount in currency units",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the spend event occurred"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("impression", "Impression"),
                            ("click", "Click"),
                            ("manual_adjustment", "Manual Adjustment"),
                            ("budget_reset", "Budget Reset"),
                            ("system_adjustment", "System Adjustment"),
                        ],
                        help_text="Type of spend event",
                        max_length=20,
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        blank=True,
                        help_text="User or system that created this spend record",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("system", "System"),
                            ("manual", "Manual Entry"),
                            ("api", "API"),
                            ("import", "Data Import"),
                        ],
                        default="system",
                        help_text="Source of the spend event",
                        max_length=50,
                    ),
                ),
                (
                    "daily_spend_before",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Campaign daily spend before this event",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "daily_spend_after",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Campaign daily spend after this event",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "monthly_spend_before",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Campaign monthly spend before this event",
                        max_digits=15,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "monthly_spend_after",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Campaign monthly spend after this event",
                        max_digits=15,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "reference_id",
                    models.CharField(
                        blank=True,
                        help_text="External reference ID (e.g., ad platform transaction ID)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Human-readable description of the spend event",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Record creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Record last update timestamp"
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spend_records",
                        to="ads.campaign",
                    ),
                ),
            ],
            options={
                "verbose_name": "Spend Record",
                "verbose_name_plural": "Spend Records",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="campaign",
            index=models.Index(fields=["is_active"], name="campaign_is_active_idx"),
        ),
        migrations.AddIndex(
            model_name="campaign",
            index=models.Index(fields=["brand"], name="campaign_brand_idx"),
        ),
        migrations.AddIndex(
            model_name="spendrecord",
            index=models.Index(
                fields=["campaign", "timestamp"], name="spend_campaign_timestamp_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="spendrecord",
            index=models.Index(fields=["timestamp"], name="spend_timestamp_idx"),
        ),
        migrations.AddIndex(
            model_name="spendrecord",
            index=models.Index(fields=["type"], name="spend_type_idx"),
        ),
        migrations.AddIndex(
            model_name="spendrecord",
            index=models.Index(fields=["source"], name="spend_source_idx"),
        ),
        migrations.AddIndex(
            model_name="spendrecord",
            index=models.Index(fields=["reference_id"], name="spend_reference_idx"),
        ),
    ]
